{"version":3,"sources":["firebase/firebase-config.js","helpers/fileUpload.js","helpers/loadNotes.js","types/types.js","actions/notes.js","hooks/useForm.js","components/notes/NotesAppBar.js","components/notes/NoteScreen.js","components/journal/NothingSelected.js","actions/ui.js","components/journal/JournalEntry.js","components/journal/JournalEntries.js","components/journal/Sidebar.js","components/journal/JournalScreen.js","actions/auth.js","components/auth/LoginScreen.js","components/auth/RegisterScreen.js","Routers/AuthRouter.js","Routers/PublicRoute.js","Routers/PrivateRoute.js","Routers/AppRouter.js","reducers/notesReducer.js","reducers/uiReducer.js","store/store.js","reducers/authReducer.js","JournalApp.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","db","firestore","googleAuthProvider","auth","GoogleAuthProvider","fileUpload","file","a","formData","FormData","append","fetch","method","body","resp","ok","json","cloudResp","secure_url","console","log","loadNotes","uid","collection","get","notesSnap","notes","forEach","snapHijo","push","id","data","types","activeNote","note","type","payload","addNewNote","startLoadingNotes","dispatch","setNotes","startSaveNotes","getState","url","noteToFirestore","doc","update","refreshNote","Swal","fire","icon","title","showConfirmButton","timer","deleteNote","useForm","initialState","useState","values","setValues","reset","newFormState","handleInputChange","target","name","value","NotesAppBar","date","Date","appDate","moment","useDispatch","active","useSelector","state","className","format","style","display","onChange","e","files","text","allowOutsideClick","didOpen","showLoading","fileUrl","close","startUploading","onClick","document","querySelector","click","NoteScreen","formValues","activeId","useRef","useEffect","current","placeholder","autoComplete","src","alt","delete","startDeleting","NothingSelected","class","setError","err","removeError","finishLoading","logout","JournalEntry","noteDate","backgroundSize","backgroundImage","JournalEntries","map","Sidebar","signOut","newNote","getTime","add","JournalScreen","startLoginEmailPassword","email","password","signInWithEmailAndPassword","then","user","login","displayName","catch","code","LoginScreen","msgError","ui","loading","handleImputChange","isFormValid","validator","isEmail","length","onSubmit","preventDefault","disabled","signInWithPopup","to","RegisterScreen","password2","trim","createUserWithEmailAndPassword","updateProfile","startRegisterWithEmailPasswordName","AuthRouter","exact","path","component","PublicRoute","isAuthenticated","Component","rest","props","PrivateRoute","AppRouter","checking","setchecking","isLoggedIn","setisLoggedIn","onAuthStateChanged","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","reducers","combineReducers","action","filter","store","createStore","applyMiddleware","thunk","JournalApp","ReactDOM","render","getElementById"],"mappings":"uPAcEA,IAASC,cATY,CACnBC,OAAQ,0CACRC,WAAY,0CACZC,UAAW,0BACXC,cAAe,sCACfC,kBAAmB,eACnBC,MAAO,8CAKT,IAAMC,EAAKR,IAASS,YACdC,EAAqB,IAAIV,IAASW,KAAKC,mB,wBCflCC,EAAU,uCAAG,WAAMC,GAAN,mBAAAC,EAAA,4DAEL,oDAEXC,EAAW,IAAIC,UACZC,OAAO,gBAAiB,iBACjCF,EAASE,OAAO,OAAQJ,GANF,kBASCK,MAPN,mDAOqB,CAC9BC,OAAQ,OACRC,KAAML,IAXQ,YASZM,EATY,QAcVC,GAdU,kCAeUD,EAAKE,OAff,eAeRC,EAfQ,yBAgBPA,EAAUC,YAhBH,yBAkBFJ,EAAKE,OAlBH,+EAsBlBG,QAAQC,IAAR,MAtBkB,0DAAH,sDCCVC,EAAS,uCAAG,WAAOC,GAAP,iBAAAf,EAAA,sEAEGP,EAAGuB,WAAH,UAAiBD,EAAjB,mBAAsCE,MAFzC,cAEfC,EAFe,OAIfC,EAAQ,GAEdD,EAAUE,SAAQ,SAAAC,GAEdF,EAAMG,KAAN,aACIC,GAAIF,EAASE,IACVF,EAASG,YAVC,kBAmBdL,GAnBc,2CAAH,sDCDTM,EACF,eADEA,EAED,gBAFCA,EAIG,iBAJHA,EAKM,oBALNA,EAOO,qBAPPA,EAQQ,sBARRA,EAUI,mBAVJA,EAWI,0BAXJA,EAYE,oBAZFA,EAaK,uBAbLA,EAeI,sBAfJA,EAgBY,0BCuBZC,EAAa,SAACH,EAAII,GAAL,MAAe,CACrCC,KAAMH,EACNI,QAAQ,aACJN,MACGI,KAILG,EAAa,SAACP,EAAII,GACrB,MAAO,CACHC,KAAMH,EACNI,QAAQ,aACJN,MACGI,KAKDI,EAAoB,SAAChB,GAE9B,8CAAO,WAAOiB,GAAP,eAAAhC,EAAA,sEACiBc,EAAUC,GAD3B,OACGI,EADH,OAEHa,EAASC,EAASd,IAFf,2CAAP,uDAMSc,EAAW,SAACd,GACrB,MAAO,CACHS,KAAMH,EACNI,QAASV,IAIJe,EAAiB,SAACP,GAC3B,8CAAO,WAAMK,EAAUG,GAAhB,iBAAAnC,EAAA,6DACIe,EAAOoB,IAAWvC,KAAlBmB,IAGFY,EAAKS,YACCT,EAAKS,WAEVC,EAPH,eAOyBV,IAELJ,GATpB,SAWG9B,EAAG6C,IAAH,UAAUvB,EAAV,0BAA+BY,EAAKJ,KAAMgB,OAAOF,GAXpD,OAaHL,EAASQ,EAAYb,EAAKJ,GAAIc,IAE9BI,IAAKC,KAAK,CACNC,KAAM,UACNC,MAAQ,qBACRC,mBAAmB,EACnBC,MAAO,OAnBR,2CAAP,yDAwBSN,EAAc,SAACjB,EAAII,GAC5B,MAAO,CACHC,KAAMH,EACNI,QAAQ,CACLN,KACAI,KAAK,aACDJ,MACGI,MAoDLoB,EAAa,SAACxB,GACvB,MAAO,CACHK,KAAMH,EACNI,QAASN,I,QC7JJyB,EAAU,WAA0B,IAAxBC,EAAuB,uDAAR,GAAQ,EAEhBC,mBAASD,GAFO,mBAErCE,EAFqC,KAE7BC,EAF6B,KAItCC,EAAQ,WAAkC,IAAjCC,EAAgC,uDAAjBL,EAC1BG,EAAWE,IAITC,EAAoB,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAGzBJ,EAAU,2BACHD,GADE,kBAEHK,EAAOC,KAAQD,EAAOE,UAKhC,MAAO,CAAEP,EAAQI,EAAmBF,I,wBCjB3BM,EAAc,WAEvB,IAAMC,EAAO,IAAIC,KACXC,EAAUC,IAAOH,GAEjB5B,EAAWgC,cACVC,EAAUC,aAAY,SAAAC,GAAK,OAAIA,EAAMhD,SAArC8C,OAiBP,OACI,sBAAKG,UAAU,gBAAf,UACI,8CAAcN,EAAQO,OAAO,uCAE7B,uBACI9C,GAAG,eACHK,KAAK,OACL6B,KAAK,OACLa,MAAO,CAACC,QAAS,QACjBC,SAhBa,SAACC,GACtB,IAAM1E,EAAO0E,EAAEjB,OAAOkB,MAAM,GACzB3E,GACCiC,EFuFkB,SAACjC,GAC3B,8CAAO,WAAMiC,EAAUG,GAAhB,iBAAAnC,EAAA,6DACW0B,EAAcS,IAAWhB,MAAjC8C,OAENxB,IAAKC,KAAK,CACNE,MAAO,qBACP+B,KAAM,eACNC,mBAAmB,EACnBC,QAAS,WACLpC,IAAKqC,iBARV,SAYkBhF,EAAWC,GAZ7B,OAYEgF,EAZF,OAcJrD,EAAWU,IAAM2C,EAEjB/C,EAASE,EAAeR,IAExBe,IAAKuC,QAlBD,2CAAP,wDExFiBC,CAAelF,OAgBxB,gCACI,wBACIqE,UAAU,kBACVc,QAzBW,WACvBC,SAASC,cAAc,iBAAiBC,SAsBhC,qBAMA,wBACIjB,UAAU,MACVc,QAnCG,WACflD,EAASE,EAAe+B,KAgChB,yBCxCHqB,EAAa,WAEtB,IAAMtD,EAAWgC,cAEHrC,EAAQuC,aAAY,SAAAC,GAAK,OAAIA,EAAMhD,SAA1C8C,OAJqB,EAMmBjB,EAAQrB,GAN3B,mBAMrB4D,EANqB,KAMThC,EANS,KAMUF,EANV,KAQrB/C,EAAmBiF,EAAnBjF,KAAMsC,EAAa2C,EAAb3C,MAAOrB,EAAMgE,EAANhE,GAIdiE,EAAWC,iBAAO9D,EAAKJ,IAE7BmE,qBAAU,WACF/D,EAAKJ,KAAOiE,EAASG,UACrBtC,EAAM1B,GACN6D,EAASG,QAAUhE,EAAKJ,MAE7B,CAACI,EAAM0B,IAEVqC,qBAAU,WACN1D,EAASN,EAAW6D,EAAWhE,GAAZ,eAAoBgE,OACxC,CAACA,EAAYvD,IAMhB,OACI,sBAAKoC,UAAU,sBAAf,UAEI,cAAC,EAAD,IACA,sBAAKA,UAAU,gBAAf,UACI,uBACIxC,KAAK,OACLgE,YAAY,4BACZxB,UAAU,qBACVyB,aAAa,MACbpC,KAAK,QACLC,MAAOd,EACP4B,SAAUjB,IAKd,0BACIqC,YAAY,gBACZxB,UAAU,iBACVX,KAAK,OACLC,MAAOpD,EACPkE,SAAUjB,IAMT5B,EAAKS,KAGF,qBAAKgC,UAAU,eAAf,SACI,qBACI0B,IAAKnE,EAAKS,IACV2D,IAAI,gBAOxB,qBACI3B,UAAU,iBACVc,QA/CS,WACjBlD,EHqGqB,SAACT,GAC1B,8CAAO,WAAOS,EAAUG,GAAjB,eAAAnC,EAAA,sDAGGe,EAAMoB,IAAWvC,KAAKmB,IAE5BtB,EAAG6C,IAAH,UAAUvB,EAAV,0BAA+BQ,IAAMyE,SAErChE,EAASe,EAAWxB,IAEpBkB,IAAKC,KAAK,CACNE,MAAO,uBACP+B,KAAM,eACNC,mBAAmB,EACnBC,QAAS,WACLpC,IAAKqC,eAEThC,MAAM,OAhBP,2CAAP,wDGtGamD,CAAc1E,KA4CnB,kCC5EC2E,EAAkB,WAC3B,OACI,sBAAK9B,UAAU,wBAAf,UACI,qBAAKA,UAAU,OAAf,SACI,6CAEI,uBAFJ,wBAQJ,mBAAG+B,MAAM,gCCTRC,EAAW,SAACC,GACrB,MAAM,CACFzE,KAAMH,EACNI,QAASwE,IAIJC,EAAc,WACvB,MAAO,CACH1E,KAAMH,IAUD8E,EAAgB,WACzB,MAAO,CACH3E,KAAMH,IAeD+E,EAAS,WAClB,MAAM,CACF5E,KAAMH,ICrCDgF,EAAe,SAAC,GAAkC,IAAjClF,EAAgC,EAAhCA,GAAIqC,EAA4B,EAA5BA,KAAMhB,EAAsB,EAAtBA,MAAOtC,EAAe,EAAfA,KAAM8B,EAAS,EAATA,IAI3CsE,EAAW3C,IAAOH,GAGlB5B,EAAWgC,cAQjB,OACI,sBACII,UAAU,yBACVc,QATiB,WACrBlD,EAASN,EAAWH,EAAI,CACpBqC,OAAMhB,QAAOtC,OAAM8B,UAKvB,UAKQA,GACA,qBACIgC,UAAU,yBACVE,MAAO,CACHqC,eAAgB,QAChBC,gBAAgB,OAAD,OAASxE,EAAT,QAO3B,sBAAKgC,UAAU,sBAAf,UACI,mBAAGA,UAAU,uBAAb,SACKxB,IAEL,mBAAGwB,UAAU,yBAAb,SACK9D,OAMT,sBAAK8D,UAAU,0BAAf,UACI,+BAAOsC,EAASrC,OAAO,UACvB,6BAAKqC,EAASrC,OAAO,eChDxBwC,EAAiB,WAAO,IAE1B1F,EAAS+C,aAAY,SAAAC,GAAK,OAAIA,EAAMhD,SAApCA,MAGP,OACI,qBAAKiD,UAAU,mBAAf,SAEQjD,EAAM2F,KAAI,SAAAnF,GAAI,OACV,cAAC,EAAD,eAEQA,GADCA,EAAKJ,UCPrBwF,GAAU,WAEnB,IAAM/E,EAAWgC,cACVP,EAAQS,aAAY,SAAAC,GAAK,OAAIA,EAAMvE,QAAnC6D,KAeP,OACI,wBAAOW,UAAU,mBAAjB,UAEI,sBAAKA,UAAU,0BAAf,UACI,qBAAIA,UAAU,OAAd,UACI,mBAAGA,UAAU,0BAGb,+BAAQX,OAGZ,wBACIW,UAAU,MACVc,QArBK,WACjBlD,EHaJ,uCAAO,WAAOA,GAAP,SAAAhC,EAAA,sEACGf,IAASW,OAAOoH,UADnB,OAEHhF,EAASwE,KAETxE,ELmIG,CACHJ,KAAMH,IKxIH,2CAAP,wDGKY,uBAQJ,sBACI2C,UAAU,qBACVc,QAzBS,WACjBlD,EREJ,uCAAO,WAAOA,EAAUG,GAAjB,mBAAAnC,EAAA,6DACIe,EAAOoB,IAAWvC,KAAlBmB,IAEDkG,EAAU,CACZrE,MAAO,GACPtC,KAAM,GACNsD,MAAM,IAAIC,MAAOqD,WANlB,SASezH,EAAGuB,WAAH,UAAiBD,EAAjB,mBAAsCoG,IAAIF,GATzD,OASG3E,EATH,OAWHN,EAASN,EAAWY,EAAIf,GAAI0F,IAC5BjF,EAASF,EAAWQ,EAAIf,GAAI0F,IAZzB,2CAAP,0DQoBQ,UAII,mBAAG7C,UAAU,+BACb,mBAAGA,UAAU,OAAb,8BAKJ,cAAC,EAAD,QC/CCgD,GAAgB,WAAO,IAEzBnD,EAAUC,aAAY,SAAAC,GAAK,OAAIA,EAAMhD,SAArC8C,OAGP,OACI,sBAAKG,UAAU,wBAAf,UACI,cAAC,GAAD,IAEA,+BAESH,EACM,cAAC,EAAD,IACA,cAAC,EAAD,UCZdoD,GAA0B,SAACC,EAAOC,GAC3C,OAAO,SAACvF,GAEJA,ELQG,CACHJ,KAAMH,IKPNxC,IAASW,OAAO4H,2BAA2BF,EAAOC,GAC7CE,MAAK,YAAa,IAAXC,EAAU,EAAVA,KACJ9G,QAAQC,IAAI6G,GACZ1F,EAAS2F,GAAOD,EAAK3G,IAAK2G,EAAKE,cAE/B5F,EAASuE,QAEZsB,OAAM,SAAApD,GACH7D,QAAQC,IAAI4D,GACZzC,EAASuE,KACK,wBAAX9B,EAAEqD,MACDrF,IAAKC,KAAK,QAAS,2HAAyH,cAuCnJiF,GAAQ,SAAC5G,EAAK6G,GACvB,MAAO,CACHhG,KAAMH,EACNI,QAAS,CACLd,MACA6G,iB,oBC5DCG,GAAc,WAGvB,IAAM/F,EAAWgC,cACVgE,EAAY9D,aAAY,SAAAC,GAAK,OAAIA,EAAM8D,MAAvCD,SAEAE,EAAWhE,aAAY,SAAAC,GAAK,OAAIA,EAAM8D,MAAtCC,QANsB,EASWlF,EAAQ,CAC5CsE,MAAO,GACPC,SAAU,KAXe,mBAStBhC,EATsB,KASV4C,EATU,KActBb,EAAmB/B,EAAnB+B,MAAOC,EAAYhC,EAAZgC,SAURa,EAAc,WAEhB,OAAIC,KAAUC,QAAQhB,GAGbC,EAASgB,OAAS,GACvBvG,EAASoE,EAAS,8CACX,IAGXpE,EAASsE,MACF,IARHtE,EAASoE,EAAS,oBACX,IAaf,OACI,gCACI,oBAAIhC,UAAU,cAAd,mBAEA,uBAAMoE,SA7BK,SAAC/D,GAChBA,EAAEgE,iBAEEL,KACApG,EAASqF,GAAwBC,EAAOC,KAyBxC,UAEQS,GAEI,qBAAK5D,UAAU,oBAAf,SACK4D,IAKb,uBACIpG,KAAK,OACLgE,YAAY,QACZnC,KAAK,QACLW,UAAU,cACVyB,aAAa,MACbnC,MAAQ4D,EACR9C,SAAW2D,IAGf,uBACIvG,KAAK,WACLgE,YAAY,WACZnC,KAAK,WACLW,UAAU,cACVV,MAAQ6D,EACR/C,SAAW2D,IAGf,wBACIvG,KAAK,SACLwC,UAAU,4BACVsE,SAAUR,EAHd,mBAQA,sBAAK9D,UAAU,wBAAf,UACI,yDACA,sBACIA,UAAU,aACVc,QAjDM,WACtBlD,GDMG,SAACA,GAEJ/C,IAASW,OAAO+I,gBAAgBhJ,GAC3B8H,MAAK,YAAa,IAAXC,EAAU,EAAVA,KACJ1F,EACI2F,GAAMD,EAAK3G,IAAK2G,EAAKE,qBCmCrB,UAII,qBAAKxD,UAAU,sBAAf,SACI,qBAAKA,UAAU,cAAc0B,IAAI,8EAA8EC,IAAI,oBAEvH,mBAAG3B,UAAU,WAAb,SACI,4DAKZ,cAAC,IAAD,CACIwE,GAAG,iBACHxE,UAAU,OAFd,uCC/FHyE,GAAiB,WAE1B,IAAM7G,EAAWgC,cAEVgE,EAAY9D,aAAY,SAAAC,GAAK,OAAIA,EAAM8D,MAAvCD,SAJyB,EAQOhF,EAAQ,CAK3CS,KAAM,GACN6D,MAAO,GACPC,SAAU,GACVuB,UAAW,KAhBiB,mBAQzBvD,EARyB,KAQb4C,EARa,KAmBzB1E,EAAoC8B,EAApC9B,KAAM6D,EAA8B/B,EAA9B+B,MAAOC,EAAuBhC,EAAvBgC,SAAUuB,EAAavD,EAAbuD,UAYxBV,EAAc,WAEhB,OAA0B,IAAvB3E,EAAKsF,OAAOR,QAEXvG,EAASoE,EAAS,sBACX,GACDiC,KAAUC,QAAQhB,GAIlBC,IAAauB,GAAavB,EAASgB,OAAS,GAElDvG,EAASoE,EAAS,uDACX,IAGXpE,EAASsE,MACF,IATHtE,EAASoE,EAAS,wBACX,IAWf,OACI,gCACI,oBAAIhC,UAAU,cAAd,sBAEA,uBAAMoE,SAlCS,SAAC/D,GAEpBA,EAAEgE,iBAECL,KAECpG,EFNsC,SAACsF,EAAOC,EAAU9D,GAGhE,OAAO,SAACzB,GACJ/C,IAASW,OAAOoJ,+BAA+B1B,EAAOC,GACjDE,KADL,uCACW,6BAAAzH,EAAA,6DAAQ0H,EAAR,EAAQA,KACX9G,QAAQC,IAAI6G,GADT,SAEGA,EAAKuB,cAAc,CAACrB,YAAanE,IAFpC,OAIHzB,EACI2F,GAAMD,EAAK3G,IAAK2G,EAAKE,cALtB,2CADX,uDASKC,OAAM,SAAApD,GACH7D,QAAQC,IAAI4D,OERPyE,CAAmC5B,EAAOC,EAAU9D,KA4B7D,UAGQuE,GAEI,qBAAK5D,UAAU,oBAAf,SACK4D,IAKb,uBACIpG,KAAK,OACLgE,YAAY,OACZnC,KAAK,OACLW,UAAU,cACVyB,aAAa,MACbnC,MAAQD,EACRe,SAAU2D,IAGd,uBACIvG,KAAK,OACLgE,YAAY,QACZnC,KAAK,QACLW,UAAU,cACVyB,aAAa,MACbnC,MAAQ4D,EACR9C,SAAU2D,IAGd,uBACIvG,KAAK,WACLgE,YAAY,WACZnC,KAAK,WACLW,UAAU,cACVV,MAAQ6D,EACR/C,SAAU2D,IAGd,uBACIvG,KAAK,WACLgE,YAAY,mBACZnC,KAAK,YACLW,UAAU,cACVV,MAAQoF,EACRtE,SAAU2D,IAGd,wBACIvG,KAAK,SACLwC,UAAU,iCAFd,uBASA,cAAC,IAAD,CACIwE,GAAG,cACHxE,UAAU,OAFd,yCCvHH+E,GAAa,WACtB,OACI,qBAAK/E,UAAU,aAAf,SACI,qBAAKA,UAAU,sBAAf,SACI,eAAC,IAAD,WACI,cAAC,IAAD,CACIgF,OAAK,EACLC,KAAK,cACLC,UAAWvB,KAEf,cAAC,IAAD,CACIqB,OAAK,EACLC,KAAK,iBACLC,UAAWT,KAEf,cAAC,IAAD,CAAUD,GAAG,wB,SCfpBW,GAAc,SAAC,GAIrB,IAHHC,EAGE,EAHFA,gBACWC,EAET,EAFFH,UACGI,EACD,gDAEF,OACI,cAAC,IAAD,2BAAWA,GAAX,IACIJ,UAAa,SAACK,GAAD,OACRH,EACM,cAAC,IAAD,CAAUZ,GAAG,MACb,cAACa,EAAD,eAAeE,SCXzBC,GAAe,SAAC,GAItB,IAHHJ,EAGE,EAHFA,gBACWC,EAET,EAFFH,UACGI,EACD,gDACF,OACI,cAAC,IAAD,2BAAWA,GAAX,IACIJ,UAAc,SAACK,GAAD,OAETH,EACK,cAACC,EAAD,eAAeE,IACf,cAAC,IAAD,CAAUf,GAAG,qBCMtBiB,GAAY,WAErB,IAAM7H,EAAWgC,cAFU,EAIKd,oBAAS,GAJd,mBAIpB4G,EAJoB,KAIVC,EAJU,OAKS7G,oBAAS,GALlB,mBAKpB8G,EALoB,KAKRC,EALQ,KA4B3B,OArBAvE,qBAAU,WAINzG,IAASW,OAAOsK,mBAAhB,uCAAoC,WAAOxC,GAAP,SAAA1H,EAAA,uDAGhC,OAAG0H,QAAH,IAAGA,OAAH,EAAGA,EAAM3G,MACLiB,EAAS2F,GAAMD,EAAK3G,IAAK2G,EAAKE,cAC9BqC,GAAc,GAEdjI,EAASD,EAAkB2F,EAAK3G,OAEhCkJ,GAAc,GAElBF,GAAY,GAXoB,2CAApC,yDAeD,CAAC/H,EAAU+H,EAAaE,IAExBH,EAEK,2CAMJ,cAAC,IAAD,UACI,8BACI,eAAC,IAAD,WAcI,cAAC,GAAD,CACIT,KAAK,QACLC,UAAaH,GACbK,gBAAmBQ,IAKvB,cAAC,GAAD,CACIZ,OAAK,EAACC,KAAO,IACbC,UAAalC,GACboC,gBAAoBQ,IAIxB,cAAC,IAAD,CAAUpB,GAAG,wB,2BCtE3B3F,GAAe,CACjB9B,MAAO,GACP8C,OAAQ,MClBNhB,GAAe,CACjBiF,SAAS,EACTF,SAAU,MCKRmC,GAAsC,qBAAXC,QAA0BA,OAAOC,sCAAyCC,KAIrGC,GAAWC,aAAgB,CAC7B5K,KCDuB,WAAyB,IAAxBuE,EAAuB,uDAAf,GAAIsG,EAAW,uCAE/C,OAAQA,EAAO7I,MACX,KAAKH,EACD,MAAM,CACFV,IAAK0J,EAAO5I,QAAQd,IACpB0C,KAAMgH,EAAO5I,QAAQ+F,aAG7B,KAAKnG,EACD,MAAO,GAEX,QACI,OAAO0C,IDXf8D,GDRqB,WAAkC,IAAjC9D,EAAgC,uDAAzBlB,GAAcwH,EAAW,uCAEtD,OAAQA,EAAO7I,MACX,KAAKH,EACD,kCAEO0C,GAFP,IAGI6D,SAAUyC,EAAO5I,UAGzB,KAAKJ,EACD,kCACO0C,GADP,IAEI6D,SAAU,OAElB,KAAKvG,EACD,kCACO0C,GADP,IAEI+D,SAAS,IAEjB,KAAKzG,EACD,kCACO0C,GADP,IAEI+D,SAAS,IAEjB,QACI,OAAO/D,ICjBfhD,MFOwB,WAAmC,IAAlCgD,EAAiC,uDAAzBlB,GAAcwH,EAAW,uCAE1D,OAAQA,EAAO7I,MAEX,KAAKH,EACD,OAAO,2BACA0C,GADP,IAEIF,OAAO,eACDwG,EAAO5I,WAGrB,KAAMJ,EACF,OAAO,2BACA0C,GADP,IAEIhD,MAAM,CAAGsJ,EAAO5I,SAAX,oBAAuBsC,EAAMhD,UAE1C,KAAKM,EACD,OAAO,2BACA0C,GADP,IAEIhD,MAAM,aAAKsJ,EAAO5I,WAG1B,KAAKJ,EACD,OAAO,2BACA0C,GADP,IAEIhD,MAAOgD,EAAMhD,MAAM2F,KACf,SAAAnF,GAAI,OAAIA,EAAKJ,KAAOkJ,EAAO5I,QAAQN,GAC7BkJ,EAAO5I,QAAQF,KACfA,OAIlB,KAAKF,EACD,OAAO,2BACA0C,GADP,IAEIF,OAAO,KACP9C,MAAOgD,EAAMhD,MAAMuJ,QAAO,SAAA/I,GAAI,OAAIA,EAAKJ,KAAOkJ,EAAO5I,aAG7D,KAAKJ,EACD,OAAO,2BACA0C,GADP,IAEIF,OAAQ,KACR9C,MAAO,KAEf,QACI,OAAOgD,MEhDNwG,GAAQC,aACjBL,GACAJ,GACIU,aAAiBC,QEjBZC,GAAa,WACtB,OACI,cAAC,IAAD,CAAUJ,MAAOA,GAAjB,SACI,cAAC,GAAD,O,OCLZK,IAASC,OAEL,cAAC,GAAD,IAEF9F,SAAS+F,eAAe,W","file":"static/js/main.1dc8c447.chunk.js","sourcesContent":["import firebase from 'firebase/app';\r\nimport 'firebase/firestore';\r\nimport 'firebase/auth';\r\n\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyDfuUP3Dgf1iMTTzEtDyoCb7V5O_hJD3LM\",\r\n    authDomain: \"react-app-journal-fe040.firebaseapp.com\",\r\n    projectId: \"react-app-journal-fe040\",\r\n    storageBucket: \"react-app-journal-fe040.appspot.com\",\r\n    messagingSenderId: \"510452301797\",\r\n    appId: \"1:510452301797:web:e7106a1833b07d33b9b90c\"\r\n  };\r\n\r\n  firebase.initializeApp(firebaseConfig);\r\n\r\n  const db = firebase.firestore();\r\n  const googleAuthProvider = new firebase.auth.GoogleAuthProvider();\r\n\r\n  export {\r\n      db,\r\n      googleAuthProvider,\r\n      firebase\r\n  }","\r\n\r\nexport const fileUpload = async(file) => {\r\n\r\n    const cloudUrl = 'https://api.cloudinary.com/v1_1/dsl3ukyo9/upload';\r\n\r\n    const formData = new FormData();\r\n    formData.append('upload_preset', 'react-journal');\r\n    formData.append('file', file);\r\n\r\n    try {\r\n        const resp = await fetch(cloudUrl,{\r\n            method: 'POST',\r\n            body: formData\r\n        });\r\n\r\n        if(resp.ok){\r\n            const cloudResp = await resp.json();\r\n            return cloudResp.secure_url;\r\n        }else {\r\n            throw await resp.json();\r\n        }\r\n\r\n    } catch (error) {\r\n        console.log(error);\r\n    }   \r\n}\r\n\r\n","import {db} from '../firebase/firebase-config';\r\n\r\n\r\nexport const loadNotes = async (uid) => {\r\n    \r\n    const notesSnap = await db.collection(`${uid}/journal/notes`).get();\r\n\r\n    const notes = [];\r\n\r\n    notesSnap.forEach(snapHijo => {\r\n\r\n        notes.push({\r\n            id: snapHijo.id,\r\n            ...snapHijo.data()\r\n        })\r\n\r\n       \r\n\r\n    })\r\n\r\n    // console.log(notes);\r\n\r\n    return notes;\r\n\r\n\r\n}","\r\n\r\nexport const types = {\r\n    login: '[Auth] Login',\r\n    logout: '[Auth] Logout',\r\n\r\n    uiSetError: '[UI] Set Error',\r\n    uiRemoveError: '[UI] Remove Error',\r\n\r\n    uiStartLoading: '[UI] Start loading',\r\n    uiFinishLoading: '[UI] Finish loading',\r\n\r\n    notesAddNew: '[Notes] New note',\r\n    notesActive: '[Notes] Set active note',\r\n    notesLoad: '[Notes] Load note',\r\n    notesUpdated: '[Notes] Updated note',\r\n    notesFileUrl: '[Notes] Updated image url',\r\n    notesDelete: '[Notes] Delete note',\r\n    notesLogoutCleaning: '[Notes] Logout Cleaning',\r\n}","import Swal from 'sweetalert2'\r\n\r\nimport { db } from \"../firebase/firebase-config\";\r\nimport { fileUpload } from '../helpers/fileUpload';\r\nimport { loadNotes } from \"../helpers/loadNotes\";\r\nimport { types } from \"../types/types\";\r\n\r\n\r\n/**\r\n {\r\n     notes: [],\r\n     active: null,\r\n     active: {\r\n    1   id: 'dsdsafdfdm3487384dkfn',\r\n        title: '',\r\n        body: '',\r\n        date: 121232321221\r\n\r\n     }\r\n }\r\n */\r\n\r\n// el segundo argumeto de usar parecido al selector\r\nexport const startNewNote = () => {\r\n    return async (dispatch, getState) => {\r\n        const {uid} = getState().auth;\r\n        \r\n        const newNote = {\r\n            title: '',\r\n            body: '',\r\n            date: new Date().getTime()\r\n        }\r\n\r\n        const doc = await db.collection(`${uid}/journal/notes`).add(newNote);\r\n       \r\n        dispatch(activeNote(doc.id, newNote));\r\n        dispatch(addNewNote(doc.id, newNote))\r\n    }\r\n}\r\n\r\n// si quieres regresar objetos se pone parentesis\r\nexport const activeNote = (id, note) => ({\r\n    type: types.notesActive,\r\n    payload: {\r\n        id,\r\n        ...note\r\n    }\r\n})\r\n\r\nconst addNewNote = (id, note) => {\r\n   return {\r\n       type: types.notesAddNew,\r\n       payload: {\r\n           id,\r\n           ...note\r\n       }\r\n   } \r\n}\r\n\r\nexport const startLoadingNotes = (uid) => {\r\n\r\n    return async (dispatch) => {\r\n        const notes = await loadNotes(uid)\r\n        dispatch(setNotes(notes))\r\n    }\r\n}\r\n\r\nexport const setNotes = (notes) => {\r\n    return {\r\n        type: types.notesLoad,\r\n        payload: notes\r\n    }\r\n}\r\n\r\nexport const startSaveNotes = (note) => {\r\n    return async(dispatch, getState) => {\r\n        const {uid} = getState().auth;\r\n        // console.log(uid);\r\n\r\n        if (!note.url){\r\n            delete note.url\r\n        }\r\n        const noteToFirestore = {...note}\r\n        // console.log(noteToFirestore);\r\n        delete noteToFirestore.id\r\n\r\n        await db.doc(`${uid}/journal/notes/${note.id}`).update(noteToFirestore);\r\n\r\n        dispatch(refreshNote(note.id, noteToFirestore));\r\n\r\n        Swal.fire({\r\n            icon: 'success',\r\n            title : 'Guardado con exito',\r\n            showConfirmButton: false,\r\n            timer: 1500\r\n        })\r\n    }\r\n}\r\n\r\nexport const refreshNote = (id, note) => {\r\n    return {\r\n        type: types.notesUpdated,\r\n        payload:{\r\n           id,\r\n           note: {\r\n               id,\r\n               ...note\r\n           } \r\n        }\r\n    }\r\n}\r\n\r\nexport const startUploading = (file) => {\r\n    return async(dispatch, getState) => {\r\n       const {active: activeNote} = getState().notes; \r\n\r\n        Swal.fire({\r\n            title: 'Cargando imagen...',\r\n            text: 'Espere porfa',\r\n            allowOutsideClick: false,\r\n            didOpen: () => {\r\n                Swal.showLoading();\r\n            }\r\n        })\r\n\r\n       const fileUrl = await fileUpload(file);\r\n\r\n       activeNote.url = fileUrl;\r\n      \r\n       dispatch(startSaveNotes(activeNote))\r\n\r\n       Swal.close();\r\n    }\r\n}\r\n\r\nexport const startDeleting = (id) => {\r\n    return async (dispatch, getState) => {\r\n        \r\n\r\n        const uid = getState().auth.uid;\r\n\r\n        db.doc(`${uid}/journal/notes/${id}`).delete();\r\n\r\n        dispatch(deleteNote(id))\r\n\r\n        Swal.fire({\r\n            title: 'Eliminando imagen...',\r\n            text: 'Espere porfa',\r\n            allowOutsideClick: false,\r\n            didOpen: () => {\r\n                Swal.showLoading();\r\n            },\r\n            timer:1500\r\n        })\r\n\r\n    }\r\n}\r\n\r\nexport const deleteNote = (id) => {\r\n    return {\r\n        type: types.notesDelete,\r\n        payload: id\r\n    }\r\n}\r\n\r\nexport const noteLogout = () => {\r\n    return {\r\n        type: types.notesLogoutCleaning,\r\n        \r\n    }\r\n}\r\n","  \r\nimport { useState } from 'react';\r\n\r\n\r\nexport const useForm = ( initialState = {} ) => {\r\n    \r\n    const [values, setValues] = useState(initialState);\r\n\r\n    const reset = (newFormState = initialState) => {\r\n        setValues( newFormState );\r\n    }\r\n\r\n\r\n    const handleInputChange = ({ target }) => {\r\n\r\n        // console.log(target);\r\n        setValues({\r\n            ...values,\r\n            [ target.name ]: target.value\r\n        });\r\n\r\n    }\r\n\r\n    return [ values, handleInputChange, reset ];\r\n\r\n}","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { startSaveNotes, startUploading } from '../../actions/notes'\r\nimport moment from 'moment'\r\n\r\n\r\nexport const NotesAppBar = () => {\r\n\r\n    const date = new Date ();\r\n    const appDate = moment(date);\r\n\r\n    const dispatch = useDispatch()\r\n    const {active} = useSelector(state => state.notes)\r\n    // console.log(active);\r\n    \r\n    const handleSave = () => {\r\n        dispatch(startSaveNotes(active))\r\n    }\r\n\r\n    const handlePictureClick = () => {\r\n        document.querySelector('#fileSelector').click();\r\n    }\r\n    const handleFileChange = (e) => {\r\n        const file = e.target.files[0]\r\n        if(file) {\r\n            dispatch(startUploading(file))\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"notes__appbar\">\r\n            <span>¡Hola! {appDate.format('[Today is] dddd D MMM [del] YYYY')}</span>\r\n \r\n            <input \r\n                id=\"fileSelector\"\r\n                type=\"file\" \r\n                name=\"file\"\r\n                style={{display: 'none'}}\r\n                onChange={handleFileChange}\r\n            />\r\n\r\n            <div>\r\n                <button \r\n                    className=\"btn btn-picture\"\r\n                    onClick={handlePictureClick}\r\n                >\r\n                    Picture\r\n                </button>\r\n                <button \r\n                    className=\"btn\"\r\n                    onClick={handleSave}\r\n                >\r\n                    Save\r\n                </button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useEffect, useRef } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { activeNote, startDeleting } from '../../actions/notes'\r\nimport { useForm } from '../../hooks/useForm'\r\n\r\n\r\nimport { NotesAppBar } from './NotesAppBar'\r\n\r\nexport const NoteScreen = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const {active:note} = useSelector(state => state.notes)\r\n    \r\n    const [formValues, handleInputChange, reset] = useForm(note);\r\n\r\n    const {body, title, id} = formValues;\r\n\r\n    // me permite alamcenar una variable mutable que no renderizara\r\n    // todo el componente si cambia\r\n    const activeId = useRef(note.id)\r\n\r\n    useEffect(() => {\r\n        if (note.id !== activeId.current){\r\n            reset(note)\r\n            activeId.current = note.id\r\n        }\r\n    }, [note, reset])\r\n\r\n    useEffect(() => {\r\n        dispatch(activeNote(formValues.id, {...formValues}))\r\n    }, [formValues, dispatch])\r\n\r\n    const handleDelete = () => {\r\n        dispatch(startDeleting(id))\r\n    }\r\n\r\n    return (\r\n        <div className=\"notes__main-content\">\r\n            \r\n            <NotesAppBar />\r\n            <div className=\"notes_content\">\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"Algun titulo interesante?\"\r\n                    className=\"notes__title-input\"\r\n                    autoComplete=\"off\"\r\n                    name=\"title\"\r\n                    value={title}\r\n                    onChange={handleInputChange}\r\n                    \r\n                    \r\n                />\r\n\r\n                <textarea\r\n                    placeholder=\"Que paso hoy?\"\r\n                    className=\"notes_textarea\"\r\n                    name=\"body\"\r\n                    value={body}\r\n                    onChange={handleInputChange}\r\n                >\r\n\r\n                </textarea>\r\n\r\n                {\r\n                    (note.url)\r\n                    &&\r\n                    (\r\n                        <div className=\"notes__image\">\r\n                            <img \r\n                                src={note.url}\r\n                                alt=\"imagen\"\r\n                            />\r\n                        </div>\r\n                    )\r\n                }\r\n            </div>\r\n\r\n            <div \r\n                className=\"btn btn-danger\"\r\n                onClick={handleDelete}\r\n            >\r\n                Eliminar Entrada\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport const NothingSelected = () => {\r\n    return (\r\n        <div className=\"nothing__main-content\">\r\n            <div className=\"mb-5\">\r\n                <p>\r\n                    Selecciona..\r\n                    <br />\r\n                    crea una entrada\r\n                </p>\r\n            </div>\r\n\r\n            {/* <i className=\"far fa-star fa-4x mt-5\"></i> */}\r\n            <i class=\"fas fa-smile-beam fa-5x\"></i>\r\n        </div>\r\n    )\r\n}\r\n","import { types } from \"../types/types\"\r\nimport {firebase} from '../firebase/firebase-config'\r\nimport { noteLogout } from \"./notes\"\r\n\r\n\r\nexport const setError = (err) => {\r\n    return{\r\n        type: types.uiSetError,\r\n        payload: err\r\n    }\r\n    \r\n}\r\nexport const removeError = () => {\r\n    return {\r\n        type: types.uiRemoveError\r\n    }\r\n}\r\n\r\nexport const startLoading = () => {\r\n    return {\r\n        type: types.uiStartLoading\r\n    }\r\n}\r\n\r\nexport const finishLoading = () => {\r\n    return {\r\n        type: types.uiFinishLoading\r\n    }\r\n}\r\n\r\nexport const startLogout = () => {\r\n    return async( dispatch ) => {\r\n        await firebase.auth().signOut();\r\n        dispatch(logout())\r\n\r\n        dispatch(noteLogout())\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const logout = () => {\r\n    return{\r\n        type: types.logout\r\n    }\r\n}","import React from 'react'\r\nimport moment from 'moment'\r\n// import 'moment/locale/es'\r\nimport { activeNote } from '../../actions/notes'\r\nimport { useDispatch } from 'react-redux'\r\n\r\nexport const JournalEntry = ({id, date, title, body, url}) => {\r\n\r\n    // moment.locale('es')\r\n\r\n    const noteDate = moment(date);\r\n    // console.log(noteDate);\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const handleEntryClick = () => {\r\n        dispatch(activeNote(id, {\r\n            date, title, body, url\r\n        }))\r\n    }\r\n\r\n    return (\r\n        <div \r\n            className=\"journal__entry pointer\"\r\n            onClick={handleEntryClick}\r\n        >\r\n            {\r\n                url &&\r\n                <div \r\n                    className=\"journal__entry-picture\"\r\n                    style={{\r\n                        backgroundSize: 'cover',\r\n                        backgroundImage: `url(${url})`\r\n                    }}\r\n                >\r\n\r\n                </div>\r\n            }\r\n\r\n            <div className=\"journal__entry-body\">\r\n                <p className=\"journal__entry-title\">\r\n                    {title}\r\n                </p>\r\n                <p className=\"journal__entry-content\">\r\n                    {body}\r\n                </p>\r\n                {/* <span>Leer mas</span> */}\r\n\r\n            </div>\r\n\r\n            <div className=\"journal__entry-date-box\">\r\n                <span>{noteDate.format('dddd')}</span>\r\n                <h4>{noteDate.format('DD')}</h4>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { JournalEntry } from './JournalEntry'\r\n\r\nexport const JournalEntries = () => {\r\n\r\n    const {notes} = useSelector(state => state.notes)\r\n   \r\n\r\n    return (\r\n        <div className=\"journal__entries\">\r\n            {\r\n                notes.map(note => (\r\n                    <JournalEntry \r\n                        key={note.id}\r\n                        {...note}\r\n                    />\r\n                    \r\n                    \r\n                ))\r\n            }\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n// import {firebase} from '../../firebase/firebase-config';\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { startLogout } from '../../actions/ui'\r\nimport { JournalEntries } from './JournalEntries'\r\nimport { startNewNote } from '../../actions/notes';\r\n\r\nexport const Sidebar = () => {\r\n\r\n    const dispatch = useDispatch()\r\n    const {name} = useSelector(state => state.auth)\r\n    // console.log(state);\r\n\r\n    // const {displayName, email} = firebase.auth().currentUser;\r\n    // const {name} = firebase.auth().currentUser;\r\n    \r\n\r\n    const handleLogout = () => {\r\n        dispatch(startLogout())\r\n    }\r\n\r\n    const handleAddNew = () => {\r\n        dispatch(startNewNote());\r\n    }\r\n\r\n    return (\r\n        <aside className=\"journal__sidebar\">\r\n            \r\n            <div className=\"journal__sidebar-navbar\">\r\n                <h3 className=\"mt-5\">\r\n                    <i className=\"far fa-user ml-5 mr-1\"></i>\r\n                    {/* <span> {displayName}</span> <br />\r\n                    <span>{email}</span> */}\r\n                    <span>{ name }</span>\r\n                </h3>\r\n\r\n                <button \r\n                    className=\"btn\"\r\n                    onClick={handleLogout}\r\n                >\r\n                    Logout\r\n                </button>\r\n            </div>\r\n\r\n            <div \r\n                className=\"journal__new-entry\"\r\n                onClick={handleAddNew}\r\n            >\r\n                <i className=\"far fa-calendar-plus fa-5x\"></i>\r\n                <p className=\"mt-5\">\r\n                    Nueva Entrada\r\n                </p>\r\n            </div>\r\n\r\n            <JournalEntries />\r\n        </aside>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { NoteScreen } from '../notes/NoteScreen'\r\nimport { NothingSelected } from './NothingSelected'\r\n// import { NothingSelected } from './NothingSelected'\r\nimport { Sidebar } from './Sidebar'\r\n\r\nexport const JournalScreen = () => {\r\n\r\n    const {active} = useSelector(state => state.notes)\r\n    \r\n\r\n    return (\r\n        <div className=\"journal__main-content\">\r\n            <Sidebar />\r\n\r\n            <main>\r\n                {\r\n                    (active) \r\n                        ? (<NoteScreen />) \r\n                        : (<NothingSelected /> )\r\n                }\r\n\r\n                \r\n            </main>\r\n        </div>\r\n    )\r\n}\r\n","import Swal from 'sweetalert2'\r\n\r\nimport { types } from \"../types/types\"\r\nimport {firebase, googleAuthProvider} from '../firebase/firebase-config'\r\nimport { finishLoading, startLoading } from './ui'\r\n\r\n// accion assincrona, regresa un callback\r\n// cuando el middleware reciebe una accion que retorna un callback(otra accion) la va a ejecutar\r\nexport const startLoginEmailPassword = (email, password) => {\r\n    return (dispatch) => {\r\n\r\n        dispatch(startLoading());\r\n\r\n        firebase.auth().signInWithEmailAndPassword(email, password)\r\n            .then(({user}) => {\r\n                console.log(user);\r\n                dispatch(login( user.uid, user.displayName ));\r\n\r\n                dispatch(finishLoading());\r\n            })\r\n            .catch(e => {\r\n                console.log(e);\r\n                dispatch(finishLoading());\r\n                if(e.code === \"auth/user-not-found\"){\r\n                    Swal.fire('Error', 'No hay ningún registro de usuario que corresponda a este identificador. Es posible que se haya eliminado al usuario. ', 'error');\r\n                }\r\n                \r\n            })\r\n    }\r\n}\r\n\r\nexport const startRegisterWithEmailPasswordName = (email, password, name) => {\r\n    // console.log(name);\r\n    // es el thunk quien me habilita poder trabajar con el dispatch\r\n    return (dispatch) => {\r\n        firebase.auth().createUserWithEmailAndPassword(email, password)\r\n            .then( async ({user}) => {\r\n                console.log(user);\r\n                await user.updateProfile({displayName: name});\r\n                \r\n                dispatch(\r\n                    login(user.uid, user.displayName)\r\n                );\r\n            })\r\n            .catch(e => {\r\n                console.log(e);\r\n            })\r\n    }\r\n}\r\n\r\n// accion asincrona\r\nexport const startGoogleLogin = () => {\r\n    return (dispatch) => {\r\n        // retorna una promesa\r\n        firebase.auth().signInWithPopup(googleAuthProvider)\r\n            .then(({user}) => {\r\n                dispatch(\r\n                    login(user.uid, user.displayName)\r\n                );\r\n            })\r\n    }\r\n}\r\n\r\nexport const login = (uid, displayName) => {\r\n    return {\r\n        type: types.login,\r\n        payload: {\r\n            uid,\r\n            displayName\r\n        }\r\n    }\r\n}\r\n\r\n// forma corta , entre parentesis\r\n\r\n// export const login = (uid, displayName) => ({\r\n    \r\n//         type: types.login,\r\n//         payload: {\r\n//             uid,\r\n//             displayName\r\n//         }\r\n    \r\n// })","import React from 'react';\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport {Link} from 'react-router-dom';\r\nimport { useForm } from '../../hooks/useForm';\r\nimport { startGoogleLogin, startLoginEmailPassword } from '../../actions/auth'\r\nimport validator from 'validator';\r\nimport { removeError, setError } from '../../actions/ui';\r\n\r\nexport const LoginScreen = () => {\r\n\r\n    // haciendo diapacth al store\r\n    const dispatch = useDispatch();\r\n    const {msgError} = useSelector(state => state.ui)\r\n    // console.log(msgError);\r\n    const {loading} = useSelector(state => state.ui)\r\n    // console.log(loading);\r\n    \r\n    const [formValues, handleImputChange] = useForm({\r\n        email: '',\r\n        password: ''\r\n    });\r\n\r\n    const {email, password} = formValues;\r\n\r\n    const handeLogin = (e) => {\r\n        e.preventDefault();\r\n\r\n        if( isFormValid()){\r\n            dispatch(startLoginEmailPassword(email, password));\r\n        }\r\n    }\r\n\r\n    const isFormValid = () => {\r\n\r\n        if(!validator.isEmail(email)){\r\n            dispatch(setError('Email invalido'))\r\n            return false;\r\n        }else if(password.length < 5){\r\n            dispatch(setError('Password debe ser mayor a 5 caracteres..'))\r\n            return false;\r\n        }\r\n\r\n        dispatch(removeError())\r\n        return true;\r\n    }\r\n    const handleGoogleLogin = () => {\r\n        dispatch(startGoogleLogin());\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h3 className=\"auth__title\">Login</h3>\r\n\r\n            <form onSubmit={handeLogin}>\r\n                {\r\n                    msgError&&\r\n                    (\r\n                        <div className=\"auth__alert-error\">\r\n                            {msgError}\r\n                        </div>\r\n                    )\r\n                }\r\n                \r\n                <input \r\n                    type=\"text\"\r\n                    placeholder=\"Email\"\r\n                    name=\"email\"\r\n                    className=\"auth__input\"\r\n                    autoComplete=\"off\"\r\n                    value={ email }\r\n                    onChange={ handleImputChange }\r\n                />\r\n                \r\n                <input \r\n                    type=\"password\"\r\n                    placeholder=\"Password\"\r\n                    name=\"password\"\r\n                    className=\"auth__input\"\r\n                    value={ password }\r\n                    onChange={ handleImputChange }\r\n                />          \r\n\r\n                <button\r\n                    type=\"submit\"\r\n                    className=\"btn btn-primary btn-block\"\r\n                    disabled={loading}\r\n                >\r\n                   Login     \r\n                </button>\r\n                \r\n                <div className=\"auth__social-networks\">\r\n                    <p>Login con redes sociales</p>\r\n                    <div \r\n                        className=\"google-btn\"\r\n                        onClick={handleGoogleLogin}\r\n                    >\r\n                        <div className=\"google-icon-wrapper\">\r\n                            <img className=\"google-icon\" src=\"https://upload.wikimedia.org/wikipedia/commons/5/53/Google_%22G%22_Logo.svg\" alt=\"google button\" />\r\n                        </div>\r\n                        <p className=\"btn-text\">\r\n                            <b>Sign in with google</b>\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n\r\n                <Link \r\n                    to=\"/auth/register\"\r\n                    className=\"link\"\r\n                >\r\n                    Crear nueva cuenta\r\n                </Link>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport {Link} from 'react-router-dom'\r\nimport { useForm } from '../../hooks/useForm'\r\nimport validator from 'validator';\r\n\r\nimport {setError} from '../../actions/ui'\r\nimport {removeError} from '../../actions/ui'\r\nimport { startRegisterWithEmailPasswordName } from '../../actions/auth';\r\n\r\nexport const RegisterScreen = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    \r\n    const {msgError} = useSelector(state => state.ui) // recibe un callback\r\n    // console.log(msgError);\r\n\r\n\r\n    const [formValues, handleImputChange]= useForm({\r\n        // name: 'Hernando',\r\n        // email: 'nando@gmail.com',\r\n        // password: '123456',\r\n        // password2: '123456'\r\n        name: '',\r\n        email: '',\r\n        password: '',\r\n        password2: ''\r\n    });\r\n\r\n    const {name, email, password, password2} = formValues;\r\n    \r\n    const handleRegister = (e) => {\r\n        // para que no haga la propagacion del fomruilario por la url\r\n        e.preventDefault()\r\n        \r\n        if(isFormValid()) {\r\n            // console.log('Formulario correcto');\r\n            dispatch(startRegisterWithEmailPasswordName(email, password, name))\r\n        }\r\n    }\r\n\r\n    const isFormValid = () => {\r\n\r\n        if(name.trim().length === 0){\r\n            // console.log('Name es required');\r\n            dispatch(setError('Name es required'))\r\n            return false;\r\n        }else if(!validator.isEmail(email)){\r\n            // console.log('Email is not valid');\r\n            dispatch(setError('Email is not valid'))\r\n            return false;\r\n        }else if( password !== password2 || password.length < 5){\r\n            // console.log('Password invalido, necesita mas de 5 caracteres..');\r\n            dispatch(setError('Password invalido, necesita mas de 5 caracteres..'))\r\n            return false;\r\n        }\r\n        \r\n        dispatch(removeError())\r\n        return true;\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h3 className=\"auth__title\">Registro</h3>\r\n\r\n            <form onSubmit={handleRegister}>\r\n                {/* El mensaje solo se mostrara Si msgError es diferente de null, es la forma corta del operador ternario */}\r\n                {   \r\n                    msgError&&\r\n                    (\r\n                        <div className=\"auth__alert-error\">\r\n                            {msgError}\r\n                        </div>\r\n                    )\r\n                }\r\n\r\n                <input \r\n                    type=\"text\"\r\n                    placeholder=\"Name\"\r\n                    name=\"name\"\r\n                    className=\"auth__input\"\r\n                    autoComplete=\"off\"\r\n                    value={ name }\r\n                    onChange={handleImputChange}\r\n                />\r\n\r\n                <input \r\n                    type=\"text\"\r\n                    placeholder=\"Email\"\r\n                    name=\"email\"\r\n                    className=\"auth__input\"\r\n                    autoComplete=\"off\"\r\n                    value={ email }\r\n                    onChange={handleImputChange}\r\n                />\r\n\r\n                <input \r\n                    type=\"password\"\r\n                    placeholder=\"Password\"\r\n                    name=\"password\"\r\n                    className=\"auth__input\"\r\n                    value={ password }\r\n                    onChange={handleImputChange}\r\n                />    \r\n\r\n                <input \r\n                    type=\"password\"\r\n                    placeholder=\"Confirm password\"\r\n                    name=\"password2\"\r\n                    className=\"auth__input\"\r\n                    value={ password2 }\r\n                    onChange={handleImputChange}\r\n                />       \r\n\r\n                <button\r\n                    type=\"submit\"\r\n                    className=\"btn btn-primary btn-block mb-5\"\r\n                \r\n                >\r\n                   Registrar    \r\n                </button>\r\n                \r\n                \r\n                <Link \r\n                    to=\"/auth/login\"\r\n                    className=\"link\"\r\n                >\r\n                    Ya estas registrado?\r\n                </Link>\r\n            </form>\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\nimport { Route, Switch, Redirect } from 'react-router-dom'\r\nimport { LoginScreen } from '../components/auth/LoginScreen'\r\nimport { RegisterScreen } from '../components/auth/RegisterScreen'\r\nexport const AuthRouter = () => {\r\n    return (\r\n        <div className=\"auth__main\">\r\n            <div className=\"auth__box-container\">\r\n                <Switch>\r\n                    <Route\r\n                        exact\r\n                        path=\"/auth/login\"\r\n                        component={LoginScreen}\r\n                    />\r\n                    <Route\r\n                        exact\r\n                        path=\"/auth/register\"\r\n                        component={RegisterScreen}\r\n                    />\r\n                    <Redirect to=\"/auth/login\"/>\r\n                </Switch>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Route, Redirect } from 'react-router-dom'\r\n\r\nexport const PublicRoute = ({\r\n    isAuthenticated,\r\n    component: Component,\r\n    ...rest\r\n}) => {\r\n\r\n    return (\r\n        <Route {...rest}\r\n            component = {(props) => (\r\n                (isAuthenticated) \r\n                    ? (<Redirect to=\"/\"/>)\r\n                    : (<Component {...props} /> )\r\n            )}\r\n        \r\n        />\r\n    )\r\n}\r\n\r\nPublicRoute.propTypes = {\r\n    isAuthenticated: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired\r\n}","import React from 'react'\r\nimport PropTypes from 'prop-types'  \r\nimport { Redirect, Route } from 'react-router-dom'\r\n\r\nexport const PrivateRoute = ({\r\n    isAuthenticated,\r\n    component: Component,\r\n    ...rest\r\n}) => {\r\n    return (\r\n        <Route {...rest}\r\n            component = { (props) => (\r\n\r\n                (isAuthenticated)\r\n                    ?(<Component {...props} />)\r\n                    :(<Redirect to=\"/auth/login\"/>)\r\n            )\r\n\r\n            }\r\n\r\n        />\r\n    )\r\n}\r\n\r\n\r\nPrivateRoute.propTypes = {\r\n    isAuthenticated: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired\r\n}","import React, { useEffect, useState } from 'react'\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    // Route,\r\n    Redirect,\r\n    \r\n  } from \"react-router-dom\";\r\n\r\nimport {firebase} from '../firebase/firebase-config'\r\nimport { JournalScreen } from '../components/journal/JournalScreen';\r\nimport { AuthRouter } from './AuthRouter';\r\n\r\nimport { useDispatch } from 'react-redux';\r\nimport { login } from '../actions/auth';\r\nimport { PublicRoute } from './PublicRoute';\r\n// import { LoginScreen } from '../components/auth/LoginScreen';\r\nimport { PrivateRoute } from './PrivateRoute';\r\n\r\nimport {startLoadingNotes } from '../actions/notes';\r\n  \r\nexport const AppRouter = () => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const [checking, setchecking] = useState(true);\r\n    const [isLoggedIn, setisLoggedIn] = useState(false)\r\n\r\n    useEffect(() => {\r\n        \r\n        // nos da un observable (se actualzza cada momento)\r\n        // si no estas auterticado te regresa un null\r\n        firebase.auth().onAuthStateChanged( async (user) => {\r\n            // console.log(user);\r\n            // si el user existe, entonces pregubnta si existe el uid\r\n            if(user?.uid){\r\n                dispatch(login(user.uid, user.displayName)) \r\n                setisLoggedIn(true)\r\n\r\n                dispatch(startLoadingNotes(user.uid));\r\n            }else {\r\n                setisLoggedIn(false)\r\n            }\r\n            setchecking(false)\r\n\r\n        })\r\n       \r\n    }, [dispatch, setchecking, setisLoggedIn])\r\n\r\n    if(checking){\r\n        return (\r\n            <h1>Espere...</h1>\r\n        )\r\n    \r\n    }\r\n\r\n    return (\r\n        <Router>\r\n            <div>\r\n                <Switch>\r\n                    {/* <Route \r\n                        path=\"/auth\" \r\n                        component={AuthRouter} \r\n                    />\r\n                    \r\n                    <Route \r\n                        exact \r\n                        path=\"/\" \r\n                        component={JournalScreen} \r\n                    />\r\n                    \r\n                    <Redirect to=\"/auth/login\"/> */}\r\n\r\n                    <PublicRoute\r\n                        path=\"/auth\"\r\n                        component = {AuthRouter}\r\n                        isAuthenticated = {isLoggedIn}\r\n                    >\r\n\r\n                    </PublicRoute>\r\n\r\n                    <PrivateRoute\r\n                        exact path = \"/\"\r\n                        component = {JournalScreen}\r\n                        isAuthenticated = { isLoggedIn}\r\n                    >\r\n                    </PrivateRoute>\r\n                    \r\n                    <Redirect to=\"/auth/login\" />\r\n\r\n                </Switch>\r\n            </div>\r\n        </Router>\r\n    )\r\n}\r\n","\r\n/**\r\n {\r\n     notes: [],\r\n     active: null,\r\n     active: {\r\n    1   id: 'dsdsafdfdm3487384dkfn',\r\n        title: '',\r\n        body: '',\r\n        date: 121232321221\r\n\r\n     }\r\n }\r\n */\r\n\r\nimport { types } from \"../types/types\";\r\n\r\n\r\nconst initialState = {\r\n    notes: [],\r\n    active: null\r\n}\r\n\r\nexport const notesReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        \r\n        case types.notesActive:\r\n            return {\r\n                ...state,\r\n                active: {\r\n                   ...action.payload\r\n                }\r\n            }\r\n        case  types.notesAddNew:\r\n            return {\r\n                ...state,\r\n                notes: [ action.payload, ...state.notes ]\r\n            }\r\n        case types.notesLoad:\r\n            return {\r\n                ...state,\r\n                notes: [...action.payload]\r\n            }\r\n    \r\n        case types.notesUpdated:\r\n            return {\r\n                ...state,\r\n                notes: state.notes.map(\r\n                    note => note.id === action.payload.id\r\n                        ? action.payload.note\r\n                        : note\r\n                )\r\n            };\r\n\r\n        case types.notesDelete:\r\n            return {\r\n                ...state,\r\n                active:null,\r\n                notes: state.notes.filter(note => note.id !== action.payload)\r\n\r\n            }\r\n        case types.notesLogoutCleaning:\r\n            return {\r\n                ...state,\r\n                active: null,\r\n                notes: []\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n\r\n\r\n} ","import { types } from \"../types/types\";\r\n\r\nconst initialState = {\r\n    loading: false,\r\n    msgError: null\r\n}\r\n\r\nexport const uiReducer = (state =initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case types.uiSetError:\r\n            return{\r\n                // se mantiene el state pero se le agrega lo que viene en el payload\r\n                ...state,\r\n                msgError: action.payload\r\n            }\r\n\r\n        case types.uiRemoveError:\r\n            return{\r\n                ...state,\r\n                msgError: null\r\n            }\r\n        case types.uiStartLoading:\r\n            return{\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case types.uiFinishLoading:\r\n            return{\r\n                ...state,\r\n                loading: false\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}","import {createStore, combineReducers, applyMiddleware, compose} from 'redux';\r\nimport thunk from 'redux-thunk';\r\n\r\nimport { authReducer } from '../reducers/authReducer';\r\nimport { notesReducer } from '../reducers/notesReducer';\r\nimport { uiReducer } from '../reducers/uiReducer';\r\n\r\n// soluciona el incoveniente de usar dos middelwares (uno para usar redux devtools\r\n// y otro para usar applyMiddleware)\r\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\r\n\r\n\r\n// usar mas de un reducer\r\nconst reducers = combineReducers({\r\n    auth: authReducer,\r\n    ui: uiReducer,\r\n    notes: notesReducer\r\n})\r\n\r\n// solo recibe un reducer, por eso debemos hacer la funcion de arriba, cuando se tenga una nueva\r\n// funcionalidad simplente se le agrega a la funcionreducers.\r\nexport const store = createStore(\r\n    reducers,\r\n    composeEnhancers(\r\n        applyMiddleware( thunk )\r\n    )\r\n);\r\n\r\n// para informarle a react que tenemos un store se debe importar en un punto alto de la aplicacion (JournalApp)\r\n","import { types } from \"../types/types\";\r\n\r\n\r\n/*\r\nEl state estara vacio mientras no este autenticado, cuando estemos\r\nautenticado se tendra un \r\n{\r\n    uid: 'ddsdsdsd'\r\n    name: 'JACUIER'\r\n}\r\n*/\r\n\r\n// los reducer reciben sie,pre dos cosas un state y un action\r\nexport const authReducer = (state = {}, action) => {\r\n\r\n    switch (action.type) {\r\n        case types.login:\r\n            return{\r\n                uid: action.payload.uid,\r\n                name: action.payload.displayName\r\n            }\r\n        \r\n        case types.logout:\r\n            return { }\r\n    \r\n        default:\r\n            return state;\r\n    }\r\n}","import React from 'react'\r\nimport {Provider} from 'react-redux'\r\n\r\nimport { AppRouter } from './Routers/AppRouter'\r\nimport { store } from './store/store'\r\n\r\n\r\nexport const JournalApp = () => {\r\n    return (\r\n        <Provider store={store}>\r\n            <AppRouter/>\r\n        </Provider>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { JournalApp } from './JournalApp';\nimport './styles/styles.scss'\nReactDOM.render(\n  \n    <JournalApp/>,\n  \n  document.getElementById('root')\n);\n"],"sourceRoot":""}